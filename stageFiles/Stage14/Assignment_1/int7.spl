[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 5;
alias userSP R0;
userSP = SP;

//Changing User stack to kernel Stack
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 - 1;

alias physicalPageNum R1;
alias offset R2;
alias fileDescPhysicalAddr R3;
physicalPageNum = [PTBR + 2*((userSP-4)/512)];
offset = (userSP - 4)%512;
fileDescPhysicalAddr = (physicalPageNum*512) + offset;
alias fileDescriptor R4;
fileDescriptor = [fileDescPhysicalAddr];

//Return value
alias phyAddrRetValue R5;
phyAddrRetValue = [PTBR + 2*((userSP - 1)/512)]*512 + (userSP - 1)%512;

if(fileDescriptor != -2)
then
	[phyAddrRetValue] = -1;
else
	alias word R5;
	word = [[PTBR + 2*((userSP - 3)/512)]*512 + (userSP - 3)%512];
	print word;
	[phyAddrRetValue] = 0;
endif;
SP = userSP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
ireturn;
