//ExpOs Library
loadi(63,13);
loadi(64,14);
//Inode table
loadi(59, 3);
loadi(60, 4);
//INIT
loadi(65,7);
loadi(66,8);
//Exception Handler
loadi(2, 15);
loadi(3, 16);

//----Hardware Interrupts----
//Int Timer
loadi(4, 17);
loadi(5, 18);
//Int Disk
loadi(6,19);
loadi(7,20);
//Int Console
loadi(8, 21);
loadi(9, 22);

//----Software Interrupts----
alias count1 R0;
alias count2 R1;
count1 = 14;
count2 = 27;

//INT 6 to INT 15
while(count1<33) do
	loadi(count1,count2);
	count1 = count1+1;
	count2 = count2+1;
endwhile;
//---------Modules----------

count1 = 40;
count2 = 53;

//MOD 0 to MOD5
while(count1<51) do
	loadi(count1,count2);
	count1 = count1+1;
	count2 = count2+1;
endwhile;

//Process 2
loadi(86,69);

//diskfreelist
loadi(61,2);

//PTBR for INIT
PTBR = PAGE_TABLE_BASE + 20;
//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

//Setting User Area Page for Process 1
[PROCESS_TABLE + 16 + 1] = 1;
[PROCESS_TABLE + 16 + 4] = CREATED;
[PROCESS_TABLE + 16 + 11] = 80;
[PROCESS_TABLE + 16 + 12] = 0;
[PROCESS_TABLE + 16 + 13] = 8*512;
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16 + 15] = 10;
[76*512] = [65 * 512 + 1];


alias counter R0;
counter=0;
alias Addr R2;
Addr = DISK_MAP_TABLE+10+2;
alias Addr2 R3;
Addr2 = [PROCESS_TABLE+16+11]*512;
while(counter<8) do
	[Addr+counter]=-1;
        [Addr2-2*counter]=-1;
        counter=counter+1;
endwhile;

[DISK_MAP_TABLE+5+10]=7;
[DISK_MAP_TABLE+6+10]=8;

counter = 2;

Addr = PROCESS_TABLE+4;
while (counter < MAX_PROC_NUM) do
	[Addr + counter*16] = TERMINATED;
	counter = counter + 1;
endwhile;

//Intialize Terminal Status Table
[TERMINAL_STATUS_TABLE] = 0;
alias count R1;
count=0;
while(count<83) do
        [MEMORY_FREE_LIST+count]=1;
        count=count+1;
endwhile;
while(count<128) do
        [MEMORY_FREE_LIST+count]=0;
        count=count+1;
endwhile;

[SYSTEM_STATUS_TABLE+3]=0;
R5 = 128 - 83;
[SYSTEM_STATUS_TABLE+2]=R5;
[DISK_STATUS_TABLE]=0;

//initialising semaphore table 
count = 0;
while(count<8) do
	[SEMAPHORE_TABLE+3*count] = -1;
	[SEMAPHORE_TABLE+3*count+1] = 0;
	count = count+1;
endwhile;
return;
