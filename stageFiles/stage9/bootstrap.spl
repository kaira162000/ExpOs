//loading timerInterrupt code from disk to memory
loadi(4, 17);
loadi(5, 18);

//loading the library code from disk, 13 and 14 block content, to memory, 63 and 64 pages.

loadi(63,13);
loadi(64,14);

loadi(65,7);
loadi(66,8);

loadi(22,35);
loadi(23,36);

loadi(2,15);
loadi(3,16);

PTBR=29696;
PTLR=10;

//setting up the page table of init program

//mapping the shared library contents to logical pages 0 and 1

[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//heap
[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

//code
[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//stack
[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";

[76*512]=[65 * 512 + 1];
SP=8*512;

//Making entry of values in the process table

//userAreaPageNumber 
[PROCESS_TABLE+11]=80;

//PID
[PROCESS_TABLE+1]=0;

//Setting up entries in the systemStatusTable

//pid
[SYSTEM_STATUS_TABLE+1]=0;

ireturn;
