alias functionNum R1;
alias PID R2;

//Free user area page
if(functionNum == 2) then
	multipush(R1, R2);
	alias userAreaPage R2;
	userAreaPage = [PROCESS_TABLE + PID*16 + 11];
	R1 = 2;
	call MEMORY_MANAGER;
	multipop(R1, R2);
	return;
endif;

//Exit Process
if(functionNum == 3) then
	//Calling Free User Area Page
	multipush(R1, R2);
	R1 = 2;
	call PROCESS_MANAGER;
	multipop(R1, R2);

	//Calling Free Page Table
	multipush(R1, R2);
	R1 = 4;
	call PROCESS_MANAGER;
	multipop(R1, R2);

	[PROCESS_TABLE + PID*16 + 4] = TERMINATED;
	return;
endif;

//Free Page Table
if(functionNum == 4) then
	alias PTBRCopy  R10;
	alias counter R11;
	PTBRCopy = PAGE_TABLE_BASE + PID*20;

	//Free library
	[PTBRCopy + 0] = -1;
	[PTBRCopy + 1] = "0000";
	[PTBRCopy + 2] = -1;
	[PTBRCopy + 3] = "0000";

	counter = 2;
	while(counter < 10) do
		if([PTBRCopy + 2*counter] != -1) then
			//Free the page
			multipush(R1, R2, R10, R11);
			R1 = 2;
			R2 = [PTBRCopy + 2*counter];
			call MEMORY_MANAGER;
			multipop(R1, R2, R10, R11);
			//Invalidate the entries
			[PTBRCopy + 2*counter] = -1;
			[PTBRCopy + 2*counter + 1] = "0000";
		endif;
		counter = counter + 1;
	endwhile;
	return;
endif;
